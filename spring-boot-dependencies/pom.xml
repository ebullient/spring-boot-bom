<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2017 Red Hat, Inc, and individual contributors.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>me.snowdrop</groupId>
    <artifactId>spring-boot-build</artifactId>
    <version>2.1.6-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>

  <artifactId>spring-boot-dependencies</artifactId>
  <packaging>pom</packaging>

  <name>Snowdrop Spring Boot Dependencies</name>
  <description>Dependencies used by Snowdrop project to facilitate usage of Spring Boot on OpenShift.</description>
  <url>http://www.snowdrop.me</url>

  <properties>
    <!-- Other -->
    <resteasy.version>3.7.0.Final</resteasy.version>
    <resteasy-spring-boot-starter.version>3.1.0.Final</resteasy-spring-boot-starter.version>
    <keycloak.version>4.8.3.Final</keycloak.version>
    <opentracing-spring-jaeger-web-starter.version>2.0.0</opentracing-spring-jaeger-web-starter.version>
    <infinispan-starter.version>2.1.3.Final</infinispan-starter.version>
    <amqp-10-starter.version>2.1.2</amqp-10-starter.version>
    <narayana-starter.version>2.1.1</narayana-starter.version>
    <cxf-spring-boot-starter-jaxrs.version>3.3.2</cxf-spring-boot-starter-jaxrs.version>
    <vertx-spring-boot.version>0.0.3</vertx-spring-boot.version>

    <!-- Spring Ecosystem -->
    <spring-boot.version>2.1.6.RELEASE</spring-boot.version>
    <spring-cloud-kubernetes.version>1.0.1.RELEASE</spring-cloud-kubernetes.version>

    <!-- Overriden from Spring Boot -->
    <hibernate.version>5.3.7.Final</hibernate.version>
    <hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
    <infinispan.version>9.4.6.Final</infinispan.version>
    <tomcat.version>9.0.21</tomcat.version>
    <undertow.version>2.0.21.Final</undertow.version>
  </properties>

  <!-- order of precedence of the artifact’s version is:
    * The version of the artifact’s direct declaration in project pom
    * The version of the artifact in the parent project
    * The version in the imported pom, taking into consideration the order of importing files
    * dependency mediation

    * If the same artifact is defined with different versions in 2 imported BOMs,
      then the version in the BOM file that was declared first will win
  -->

  <dependencyManagement>

    <dependencies>
      <!--Additional Infinispan dependencies (version set for Spring dependencies above) -->
      <dependency>
        <groupId>org.infinispan</groupId>
        <artifactId>infinispan-bom</artifactId>
        <version>${infinispan.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- ONLY the following Spring Boot Starters are supported -->

      <!-- org.springframework.boot starters (unchanged):

        HTTP runtime:
        org.springframework.boot:spring-boot-starter-tomcat
        org.springframework.boot:spring-boot-starter-undertow

        Web:
        org.springframework.boot:spring-boot-starter-web

        WebSocket:
        org.springframework.boot:spring-boot-starter-websocket

        Persistence:
        org.springframework.boot:spring-boot-starter-data-jpa
        org.springframework.boot:spring-boot-starter-jdbc

        Monitoring:
        org.springframework.boot:spring-boot-starter-actuator

        Messaging:
        org.springframework.boot:spring-boot-starter-artemis
        org.springframework.boot:spring-boot-starter-activemq

        Bean Validation:
        org.springframework.boot:spring-boot-starter-validation
        -->

      <!-- Spring Boot Core starters (exclude logging) -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>

      <!-- JAX-RS -->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>${resteasy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-spring-boot-starter</artifactId>
        <version>${resteasy-spring-boot-starter.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- Distributed tracing with OpenTracing -->
      <dependency>
        <groupId>io.opentracing.contrib</groupId>
        <artifactId>opentracing-spring-jaeger-web-starter</artifactId>
        <version>${opentracing-spring-jaeger-web-starter.version}</version>
      </dependency>

      <!-- Spring Cloud Kubernetes -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-kubernetes</artifactId>
        <version>${spring-cloud-kubernetes.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
        <version>${spring-cloud-kubernetes.version}</version>
      </dependency>

      <!-- Cache / Data Grid -->
      <dependency>
        <groupId>org.infinispan</groupId>
        <artifactId>infinispan-spring-boot-starter-embedded</artifactId>
        <version>${infinispan-starter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.infinispan</groupId>
        <artifactId>infinispan-spring-boot-starter-remote</artifactId>
        <version>${infinispan-starter.version}</version>
      </dependency>

      <!-- AMQP -->
      <dependency>
        <groupId>org.amqphub.spring</groupId>
        <artifactId>amqp-10-jms-spring-boot-starter</artifactId>
        <version>${amqp-10-starter.version}</version>
      </dependency>

      <!-- Transactions -->
      <dependency>
        <groupId>me.snowdrop</groupId>
        <artifactId>narayana-spring-boot-starter</artifactId>
        <version>${narayana-starter.version}</version>
      </dependency>

      <!-- Security -->
      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-spring-boot-starter</artifactId>
        <version>${keycloak.version}</version>
      </dependency>

      <!-- Vert.x -->
      <dependency>
        <groupId>dev.snowdrop</groupId>
        <artifactId>vertx-spring-boot-starter</artifactId>
        <version>${vertx-spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.snowdrop</groupId>
        <artifactId>vertx-spring-boot-starter-http</artifactId>
        <version>${vertx-spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.snowdrop</groupId>
        <artifactId>vertx-spring-boot-starter-http-test</artifactId>
        <version>${vertx-spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.snowdrop</groupId>
        <artifactId>vertx-spring-boot-starter-actuator</artifactId>
        <version>${vertx-spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>dev.snowdrop</groupId>
        <artifactId>vertx-spring-boot-starter-mail</artifactId>
        <version>${vertx-spring-boot.version}</version>
      </dependency>

      <!-- End of supported starters -->

      <!-- JAX-RS with Apache CXF (UNSUPPORTED) -->
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
        <version>${cxf-spring-boot-starter-jaxrs.version}</version>
      </dependency>

      <!-- Configuration of required dependencies, not directly supported, use starters instead -->

      <!-- Hibernate -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jta_1.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jta_1.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Undertow -->
      <dependency>
        <groupId>io.undertow</groupId>
        <artifactId>undertow-servlet</artifactId>
        <version>${undertow.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<!-- Create an effective POM (with versions expanded) for the CLI and
							documentation -->
						<id>flatten-effective-pom</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>false</updatePomFile>
							<outputDirectory>${project.build.directory}/effective-pom</outputDirectory>
							<flattenedPomFilename>spring-boot-dependencies.xml</flattenedPomFilename>
							<flattenMode>oss</flattenMode>
							<pomElements>
								<dependencyManagement>expand</dependencyManagement>
								<pluginManagement>expand</pluginManagement>
								<properties>expand</properties>
								<repositories>expand</repositories>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<!-- Flatten and simplify our own POM for install/deploy -->
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>true</updatePomFile>
							<flattenMode>bom</flattenMode>
							<pomElements>
								<pluginManagement>keep</pluginManagement>
								<properties>keep</properties>
								<repositories>keep</repositories>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<id>flatten-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
    </plugins>
  </build>

</project>
